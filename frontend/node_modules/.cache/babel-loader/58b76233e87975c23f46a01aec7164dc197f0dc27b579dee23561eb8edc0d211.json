{"ast":null,"code":"var _jsxFileName = \"/Users/katherynrojas/Documents/reconocimiento-facial-react-node/frontend/src/FaceRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceRecognition = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState(null);\n  const imageRef = useRef();\n  useEffect(() => {\n    const MODEL_URL = '/models';\n    const loadModels = async () => {\n      // Cargar los modelos desde la carpeta /models\n\n      await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n      await faceapi.loadFaceLandmarkModel(MODEL_URL);\n      await faceapi.loadFaceRecognitionModel(MODEL_URL);\n    };\n    loadModels();\n  }, []);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    setImage(URL.createObjectURL(file));\n    const imgElement = imageRef.current;\n\n    // Detectar caras cuando la imagen esté lista\n    imgElement.onload = async () => {\n      const detections = await faceapi.detectAllFaces(imgElement).withFaceLandmarks().withFaceDescriptors();\n      setDetections(detections);\n      console.log(detections); // Ver los resultados en la consola\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reconocimiento de Personas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: image,\n      alt: \"Uploaded\",\n      style: {\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), detections && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detecciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(detections, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRecognition, \"spCFAAgC/+ug5VnYDROqSmjK6jY=\");\n_c = FaceRecognition;\nexport default FaceRecognition;\nvar _c;\n$RefreshReg$(_c, \"FaceRecognition\");","map":{"version":3,"names":["React","useEffect","useRef","useState","faceapi","jsxDEV","_jsxDEV","FaceRecognition","_s","image","setImage","detections","setDetections","imageRef","MODEL_URL","loadModels","loadSsdMobilenetv1Model","loadFaceLandmarkModel","loadFaceRecognitionModel","handleImageUpload","event","file","target","files","URL","createObjectURL","imgElement","current","onload","detectAllFaces","withFaceLandmarks","withFaceDescriptors","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","ref","src","alt","style","width","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/katherynrojas/Documents/reconocimiento-facial-react-node/frontend/src/FaceRecognition.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\n\nconst FaceRecognition = () => {\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState(null);\n  const imageRef = useRef();\n\n  useEffect(() => {\n    const MODEL_URL = '/models'\n    const loadModels = async () => {\n      // Cargar los modelos desde la carpeta /models\n\n      await faceapi.loadSsdMobilenetv1Model(MODEL_URL)\n      await faceapi.loadFaceLandmarkModel(MODEL_URL)\n      await faceapi.loadFaceRecognitionModel(MODEL_URL)\n\n    };\n    loadModels();\n  }, []);\n\n  const handleImageUpload = async (event) => {\n    const file = event.target.files[0];\n    setImage(URL.createObjectURL(file));\n\n    const imgElement = imageRef.current;\n\n    // Detectar caras cuando la imagen esté lista\n    imgElement.onload = async () => {\n      const detections = await faceapi.detectAllFaces(imgElement)\n        .withFaceLandmarks()\n        .withFaceDescriptors();\n\n      setDetections(detections);\n      console.log(detections); // Ver los resultados en la consola\n    };\n  };\n\n  return (\n    <div>\n      <h1>Reconocimiento de Personas</h1>\n      <input type=\"file\" onChange={handleImageUpload} />\n      {image && <img ref={imageRef} src={image} alt=\"Uploaded\" style={{ width: '300px' }} />}\n      {detections && (\n        <div>\n          <h2>Detecciones:</h2>\n          <pre>{JSON.stringify(detections, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}